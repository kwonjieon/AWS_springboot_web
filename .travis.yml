language: java
jdk:
  - openjdk11
#master에 push될때만 수행
branches:
  only:
    - master

before_install:
  - chmod +x gradlew
#Travis CI서버의 Home
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'
#push되었을때 하는 명령어
script: "./gradlew clean build"

before_deploy:
  - mkdir -p before-deploy # zip에 포함시킬 파일들을 담을 디렉토리 생성
  - cp scripts/*.sh before-deploy/
  - cp appspec.yml before-deploy/
  - cp build/libs/*.jar before-deploy/
  - cd before-deploy && zip -r before-deploy * # before-deploy로 이동후 전체 압축
  - cd ../ && mkdir -p deploy # 상위 디렉토리로 이동후 deploy 디렉토리 생성
  - mv before-deploy/before-deploy.zip deploy/AWS_springBoot-web.zip # deploy로 zip파일 이동
deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY #travis repo settings에서 설정한값
    secret_access_key: $AWS_SECRET_KEY #travis 에서 설정한값
    bucket: aws-springboot-test-build
    region: ap-northeast-2
    skip_cleanup: true
    acl: private #zip파일접근을 private으로
    local_dir: deploy #before_deploy에서 생성한 dir
    wait-until-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: aws-springboot-test-build # S3 버킷
    key: AWS_springBoot-web.zip # 빌드 파일을 압축해서 전달
    bundle_type: zip
    application: AWS_springBoot-web # 웹 콘솔에서 등록한 CodeDeploy 어플리케이션
    deployment_group: AWS_sprinngBoot-web-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true



#CI 실행완료 시 메일로 알람
notifications:
  email:
    recipients:
      rnjswldjs0411@gmail.com